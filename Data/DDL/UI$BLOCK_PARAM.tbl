CREATE TABLE UI$BLOCK_PARAM (
    "BLOCK"          D_IDENT NOT NULL,
    PARAM            D_IDENT NOT NULL,
    PARAM_DIRECTION  D_IDENT NOT NULL,
    DATA_TYPE        D_IDENT NOT NULL,
    CAPTION          D_NAME NOT NULL,
    ORDER_NUM        SMALLINT,
    VISIBLE          D_BOOLEAN DEFAULT 1 NOT NULL,
    REQUIRED         D_BOOLEAN DEFAULT 0 NOT NULL,
    GROUP_NAME       D_NAME,
    ENABLER_PARAM    D_IDENT,
    SOURCE_FORM      D_IDENT,
    SOURCE_BLOCK     D_IDENT,
    SOURCE_CHILD     INTEGER,
    SOURCE_PARAM     D_IDENT,
    INDEX_IN_KEY     SMALLINT,
    INDEX_IN_PARENT  SMALLINT,
    INDEX_IN_NAME    SMALLINT,
    READ_ONLY        D_BOOLEAN DEFAULT 0 NOT NULL,
    CALL_ORDER_NUM   SMALLINT
);
ALTER TABLE UI$BLOCK_PARAM ADD CONSTRAINT CHK1_UI$BLOCK_PARAM CHECK ((source_child is null and source_param is null) or (source_child is not null and source_param is not null));
ALTER TABLE UI$BLOCK_PARAM ADD CONSTRAINT CHK2_UI$BLOCK_PARAM CHECK ((index_in_key > 0) and (index_in_parent > 0) and (index_in_name > 0)
);
ALTER TABLE UI$BLOCK_PARAM ADD CONSTRAINT CHK3_UI$BLOCK_PARAM CHECK (param_direction='field' or call_order_num is not null
);
ALTER TABLE UI$BLOCK_PARAM ADD CONSTRAINT PK_UI$PROCEDURE_PARAM PRIMARY KEY ("BLOCK", PARAM);
ALTER TABLE UI$BLOCK_PARAM ADD CONSTRAINT FK_UI$BLOCK_PARAM_1 FOREIGN KEY ("BLOCK", ENABLER_PARAM) REFERENCES UI$BLOCK_PARAM ("BLOCK", PARAM) ON DELETE SET NULL ON UPDATE CASCADE;

ALTER TABLE UI$BLOCK_PARAM ADD CONSTRAINT FK_UI$BLOCK_PARAM_2 FOREIGN KEY ("BLOCK") REFERENCES UI$BLOCK (ID) ON DELETE CASCADE ON UPDATE CASCADE;

ALTER TABLE UI$BLOCK_PARAM ADD CONSTRAINT FK_UI$BLOCK_PARAM_3 FOREIGN KEY (SOURCE_CHILD, SOURCE_FORM, SOURCE_BLOCK) REFERENCES UI$FORM_CHILD (ID, FORM, "BLOCK");

ALTER TABLE UI$BLOCK_PARAM ADD CONSTRAINT FK_UI$BLOCK_PARAM_4 FOREIGN KEY (SOURCE_BLOCK, SOURCE_PARAM) REFERENCES UI$BLOCK_PARAM ("BLOCK", PARAM);

ALTER TABLE UI$BLOCK_PARAM ADD CONSTRAINT FK_UI$PROCEDURE_PARAM_2 FOREIGN KEY (PARAM_DIRECTION) REFERENCES UI$PARAM_DIRECTION (ID);

ALTER TABLE UI$BLOCK_PARAM ADD CONSTRAINT FK_UI$PROCEDURE_PARAM_3 FOREIGN KEY (DATA_TYPE) REFERENCES UI$DATA_TYPE (ID);


COMMENT ON TABLE UI$BLOCK_PARAM IS 
'Параметры блока';


COMMENT ON COLUMN UI$BLOCK_PARAM."BLOCK" IS 
'Блок';
COMMENT ON COLUMN UI$BLOCK_PARAM.PARAM IS 
'Параметр';
COMMENT ON COLUMN UI$BLOCK_PARAM.PARAM_DIRECTION IS 
'Тип параметра';
COMMENT ON COLUMN UI$BLOCK_PARAM.DATA_TYPE IS 
'Тип данных';
COMMENT ON COLUMN UI$BLOCK_PARAM.CAPTION IS 
'Название';
COMMENT ON COLUMN UI$BLOCK_PARAM.ORDER_NUM IS 
'Порядковый номер';
COMMENT ON COLUMN UI$BLOCK_PARAM.VISIBLE IS 
'Видимость';
COMMENT ON COLUMN UI$BLOCK_PARAM.REQUIRED IS 
'Обязательность';
COMMENT ON COLUMN UI$BLOCK_PARAM.GROUP_NAME IS 
'Группа параметров';
COMMENT ON COLUMN UI$BLOCK_PARAM.ENABLER_PARAM IS 
'Параметр-включатель';
COMMENT ON COLUMN UI$BLOCK_PARAM.SOURCE_CHILD IS 
'Источник, блок в форме, для ссылок из формы';
COMMENT ON COLUMN UI$BLOCK_PARAM.SOURCE_PARAM IS 
'Источник, параметр';
COMMENT ON COLUMN UI$BLOCK_PARAM.INDEX_IN_KEY IS 
'Индекс в ключе';
COMMENT ON COLUMN UI$BLOCK_PARAM.INDEX_IN_PARENT IS 
'Индекс в полях-предках, для дерева';
COMMENT ON COLUMN UI$BLOCK_PARAM.INDEX_IN_NAME IS 
'Индекс в имени';
COMMENT ON COLUMN UI$BLOCK_PARAM.READ_ONLY IS 
'Только для чтения';
COMMENT ON COLUMN UI$BLOCK_PARAM.CALL_ORDER_NUM IS 
'Порядковый номер в вызове процедуры';